{"version":3,"sources":["components/Layout/components/Header.js","components/Layout/components/Content.js","reducers/index.js","components/Layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","headerClass","theme","className","Content","contentClass","CHANGE_THEME","initState","createStore","state","action","type","payload","Object","assign","Layout","useSelector","disPatch","useDispatch","value","onClick","changeTheme","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"oQAaeA,EAXA,SAACC,GACd,IACMC,EAAwB,UADZD,EAAVE,MACgC,kBAAoB,uBAE5D,OACE,wBAAQC,UAAWF,EAAnB,SACE,qBAAKE,UAAU,kBCGNC,EATC,SAACJ,GACf,IACMK,EAAyB,UADbL,EAAVE,MACiC,mBAAqB,wBAE9D,OACE,qBAAKC,UAAWE,K,OCLdC,EAAe,eAEfC,EAAY,CAChBL,MAAO,SA2BMM,mBAxBC,WAAgC,IAA/BC,EAA8B,uDAAtBF,EAAWG,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKL,EACH,IAAMJ,EAAQQ,EAAOE,QAAQV,MAE7B,OADAO,EAAQI,OAAOC,OAAOL,EAAO,CAAEP,UAEjC,QACE,OAAOO,MCWEM,G,MApBA,WACb,IAAMb,EAAQc,aAAY,SAAAP,GAAK,OAAIA,EAAMP,SACnCe,EAAWC,cAEjB,OACE,0BAASf,UAAU,kBAAnB,UACE,cAAC,EAAD,CAAQD,MAAOA,IACf,cAAC,EAAD,CAASA,MAAOA,IAChB,2CACA,uBAAOiB,MAAOjB,IACd,wBACES,KAAK,SACLS,QAAS,WAAQH,EDKlB,SAAqBf,GAC1B,MAAO,CACLS,KAAML,EACNM,QAAS,CACPV,UCT4BmB,CAAsB,SAAVnB,EAAmB,QAAU,UAFrE,sCCHSoB,MARf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.3c818013.chunk.js","sourcesContent":["import './style.css';\r\n\r\nconst Header = (props) => {\r\n  const { theme } = props;\r\n  const headerClass = theme === 'light' ? 'headerContainer' : 'headerContainer dark';\r\n\r\n  return (\r\n    <header className={headerClass}>\r\n      <div className=\"background\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './style.css';\r\n\r\nconst Content = (props) => {\r\n  const { theme } = props;\r\n  const contentClass = theme === 'light' ? 'contentContainer' : 'contentContainer dark';\r\n\r\n  return (\r\n    <div className={contentClass} />\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import { createStore } from \"redux\";\r\n\r\nconst CHANGE_THEME = 'CHANGE_THEME';\r\n\r\nconst initState = {\r\n  theme: 'light',\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_THEME:\r\n      const theme = action.payload.theme;\r\n      state = Object.assign(state, { theme });\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * 變更主題\r\n * @param {String} theme 主題\r\n */\r\nexport function changeTheme(theme) {\r\n  return {\r\n    type: CHANGE_THEME,\r\n    payload: {\r\n      theme,\r\n    },\r\n  };\r\n}\r\n\r\nexport default createStore(reducer);;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport { changeTheme } from '../../reducers';\r\nimport './style.css';\r\n\r\nconst Layout = () => {\r\n  const theme = useSelector(state => state.theme);\r\n  const disPatch = useDispatch();\r\n\r\n  return (\r\n    <article className=\"layoutContainer\">\r\n      <Header theme={theme} />\r\n      <Content theme={theme} />\r\n      <span>Theme: </span>\r\n      <input value={theme} />\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => { disPatch(changeTheme(theme === 'dark' ? 'light' : 'dark')); }}\r\n      >\r\n        按按看R\r\n      </button>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Layout;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Layout from './components/Layout';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './reducers';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}